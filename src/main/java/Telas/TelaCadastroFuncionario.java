/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Telas;

import Banco.BancoMysql;
import Classes.Funcoes;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 * TelaCadastroFuncionario é uma classe que representa uma janela interna
 * (JInternalFrame) para o cadastro e gerenciamento de funcionários. Esta classe
 * permite adicionar, editar e excluir funcionários em um banco de dados MySQL.
 * <p>
 * A tela inclui campos para o nome do funcionário, cpf e etc, além de uma
 * tabela para exibir os funcionários cadastrados.
 * </p>
 *
 * @version 1.0
 * @since 2023-06-13
 *
 * @see javax.swing.JInternalFrame
 * @see Banco.BancoMysql
 */
public class TelaCadastroFuncionario extends javax.swing.JInternalFrame {

    private final Set<Integer> editedRows = new HashSet<>();
    private final Map<String, Integer> beneficioMap = new HashMap<>();

    /**
     *
     * @param args
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
    }

    /**
     * Creates new form TelaCadastroFuncionario
     */
    public TelaCadastroFuncionario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNomeFuncionário = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        btnAdicionarFuncionario = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cboBeneficio = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionario = new javax.swing.JTable();
        btnEditarFuncionário = new javax.swing.JButton();
        btnDeletarFuncionario = new javax.swing.JButton();

        setTitle("Funcionários");
        setPreferredSize(new java.awt.Dimension(891, 445));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novo Funcionário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Nome do Funcionário:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("CPF:");

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnAdicionarFuncionario.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAdicionarFuncionario.setText("Adicionar");
        btnAdicionarFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdicionarFuncionarioMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Benefício:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Salário Base:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Cargo");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdicionarFuncionario)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomeFuncionário, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboBeneficio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(271, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeFuncionário, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cboBeneficio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarFuncionario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabelaFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDFuncionario", "Nome do Funcionário", "CPF", "Salário Base", "Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaFuncionario.setColumnSelectionAllowed(true);
        tabelaFuncionario.setPreferredSize(new java.awt.Dimension(321, 130));
        jScrollPane1.setViewportView(tabelaFuncionario);
        tabelaFuncionario.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tabelaFuncionario.getColumnModel().getColumnCount() > 0) {
            tabelaFuncionario.getColumnModel().getColumn(0).setMinWidth(0);
            tabelaFuncionario.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabelaFuncionario.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        btnEditarFuncionário.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEditarFuncionário.setText("Salvar alterações");
        btnEditarFuncionário.setEnabled(false);
        btnEditarFuncionário.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarFuncionárioMouseClicked(evt);
            }
        });

        btnDeletarFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeletarFuncionario.setText("Excluir");
        btnDeletarFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeletarFuncionarioMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(btnEditarFuncionário)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeletarFuncionario)
                .addContainerGap(337, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarFuncionário)
                    .addComponent(btnDeletarFuncionario))
                .addGap(18, 18, 18))
        );

        jPanel5.getAccessibleContext().setAccessibleDescription("");

        setBounds(0, 0, 891, 445);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método de evento para o botão Adicionar Funcionário. Este método é
     * chamado quando o botão é clicado e adiciona um novo funcionário ao banco
     * de dados.
     *
     * @param evt evento de clique do mouse
     */
    private void btnAdicionarFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarFuncionarioMouseClicked
        String nome = txtNomeFuncionário.getText();
        String cpf = txtCPF.getText();

        if (!nome.isEmpty()) {
            try {

                String selectedName = (String) cboBeneficio.getSelectedItem();
                int beneficioId = beneficioMap.get(selectedName);

                String sql = "INSERT INTO funcionarios (nomeFuncionario, cpfFuncionario, idBeneficio, salario, cargo) VALUES ('" + nome + "', '" + cpf.replaceAll("[^0-9]+", "") + "', " + beneficioId + ", " + txtSalario.getText().replace(",", ".") + ", '" + txtCargo.getText() + "')";

                var inseriu = BancoMysql.Inserir(sql);

                if (inseriu) {
                    JOptionPane.showMessageDialog(this, "Funcionário adicionado com sucesso!");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao adicionar funcionário.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        try {
            PreencheTabelaFuncionario();
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtNomeFuncionário.setText("");
        txtCPF.setText("");
        txtCargo.setText("");
        txtSalario.setText("");
    }//GEN-LAST:event_btnAdicionarFuncionarioMouseClicked

    /**
     * Método para carregar os dados da tabela de funcionários. Este método
     * recupera os dados do banco de dados e preenche a tabela com esses dados.
     *
     * @throws java.sql.SQLException
     */
    public void PreencheTabelaFuncionario() throws SQLException {
        var retorno = BancoMysql.ExecutarConsulta("select * from funcionarios");
        DefaultTableModel model = (DefaultTableModel) tabelaFuncionario.getModel();
        model.setNumRows(0);
        while (retorno.next()) {
            model.addRow(new Object[]{
                retorno.getInt("idfuncionarios"),
                retorno.getString("nomeFuncionario"),
                Funcoes.formatCPF(retorno.getString("cpfFuncionario")),
                retorno.getDouble("salario"),
                retorno.getString("cargo")
            });
        }
        BancoMysql.FecharConexao();
        model.addTableModelListener((TableModelEvent e) -> {
            if (e.getType() == TableModelEvent.UPDATE) {
                int row = e.getFirstRow();
                editedRows.add(row);
                btnEditarFuncionário.setEnabled(true);
            }
        });

    }

    /**
     * Método para carregar os dados da tabela de benefícios. Este método
     * recupera os dados do banco de dados e preenche o combobox com esses
     * dados.
     *
     * @throws java.sql.SQLException
     */
    public void PreencheCboBeneficio() throws SQLException {
        var retorno = BancoMysql.ExecutarConsulta("select * from beneficios");

        while (retorno.next()) {
            String NomeBeneficio = retorno.getString("NomeBeneficio");
            int idBeneficios = retorno.getInt("idBeneficios");
            cboBeneficio.addItem(NomeBeneficio);
            beneficioMap.put(NomeBeneficio, idBeneficios);
        }
        BancoMysql.FecharConexao();
    }

    /**
     * Método de evento para o botão Editar Funcionário. Este método é chamado
     * quando o botão é clicado e edita os funcionários selecionados na tabela.
     *
     * @param evt evento de clique do mouse
     */
    private void btnEditarFuncionárioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarFuncionárioMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabelaFuncionario.getModel();
        int qtd = 0;
        for (int row : editedRows) {
            int id = (int) model.getValueAt(row, 0);
            String nome = (String) model.getValueAt(row, 1);
            String cpf = (String) model.getValueAt(row, 2);
            double salario = (double) model.getValueAt(row, 3);
            String cargo = (String) model.getValueAt(row, 4);

            DecimalFormat formato = new DecimalFormat("#.00");
            String numeroFormatado = formato.format(salario);

            try {
                String sql = "UPDATE funcionarios SET nomeFuncionario = '" + nome + "', cpfFuncionario = '" + cpf.replaceAll("[^0-9]+", "")
                        + "', salario = " + numeroFormatado.replace(",", ".") + ", cargo = '" + cargo + "', horasTrabalhadas = 0 WHERE idFuncionarios = " + id + "";
                var atualizou = BancoMysql.Atualizar(sql);
                if (atualizou) {
                    qtd++;
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao atualizar funcionário.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }

        editedRows.clear();
        JOptionPane.showMessageDialog(this, qtd + " funcionários(s) atualizado(s) com sucesso!");
        btnEditarFuncionário.setEnabled(false);
    }//GEN-LAST:event_btnEditarFuncionárioMouseClicked

    /**
     * Método de evento para o botão Deletar Funcionário. Este método é chamado
     * quando o botão é clicado e deleta os funcionários selecionados na tabela.
     *
     * @param evt evento de clique do mouse
     */
    private void btnDeletarFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarFuncionarioMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabelaFuncionario.getModel();
        int selectedRow = tabelaFuncionario.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um funcionário para deletar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int id = (int) tabelaFuncionario.getValueAt(selectedRow, 0);

        int confirm = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja deletar este funcionário?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                String sql = "DELETE FROM funcionarios WHERE idfuncionarios = " + id;
                var deletou = BancoMysql.Deletar(sql);

                if (deletou) {
                    model.removeRow(selectedRow);
                    JOptionPane.showMessageDialog(this, "Funcionário deletado com sucesso!");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao deletar funcionário.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeletarFuncionarioMouseClicked
    /**
     * Método de evento para a abertura do formulário. Este método é chamado
     * quando a janela interna é aberta e carrega os dados da tabela e do
     * combobox.
     *
     * @param evt evento de abertura da janela interna
     */
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            // TODO add your handling code here:
            PreencheCboBeneficio();
            PreencheTabelaFuncionario();
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarFuncionario;
    private javax.swing.JButton btnDeletarFuncionario;
    private javax.swing.JButton btnEditarFuncionário;
    private javax.swing.JComboBox<String> cboBeneficio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaFuncionario;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtNomeFuncionário;
    private javax.swing.JTextField txtSalario;
    // End of variables declaration//GEN-END:variables
}
